{"version":3,"sources":["images/logo.svg","images/OkLogin.svg","images/NotLogin.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/Auth.js","components/Login.js","components/Register.js","utils/Api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/InfoTooltip.js","components/ProtectedRoute.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","src","logo","alt","path","to","user","onClick","onSignOut","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","key","link","onCardDelete","name","onCardLike","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","item","onCardClick","Footer","PopupWithForm","isOpen","noValidate","onSubmit","title","children","type","buttonName","id","onClose","ImagePopup","BASE_URL","Login","useState","email","setEmail","password","setPassword","history","useHistory","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","status","Auth","localStorage","setItem","token","setUser","handleLogin","push","handleInfoTooltip","required","placeholder","onChange","target","value","Register","console","log","api","options","this","baseUrl","input","author","job","cardId","authorization","EditProfilePopup","setName","description","setDescription","useEffect","onUpdateUser","minLength","maxLength","pattern","defaultValue","EditAvatarPopup","avaRef","useRef","setAvatar","onUpdateAvatar","current","ref","AddPlacePopup","inputName","inputLink","onUpdatePlace","InfoTooltip","isLoggedIn","emblemOk","emblemNot","ProtectedRoute","Component","component","loggedIn","App","setLoggedIn","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","setCards","selectedCard","setSelectedCard","setCurrentUser","tokenCheck","jwt","getItem","data","closeAllPopups","all","getUserInfo","getInitialCards","initialCards","catch","err","Provider","removeItem","deleteCard","newCards","filter","c","deleteLike","putLike","newCard","changeAvatar","newData","changeProfileInfo","addNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f902e1f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/OkLogin.e38b395c.svg\";","module.exports = __webpack_public_path__ + \"static/media/NotLogin.4072126c.svg\";","import React from 'react';\r\nimport logo from '../images/logo.svg';\r\nimport { NavLink, Route } from 'react-router-dom';\r\n\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={logo} className=\"header__logo\" alt=\"Место\" />\r\n            <nav className=\"header__nav\">\r\n                <Route path=\"/sign-up\">\r\n                    <NavLink to='/sign-in' className=\"header__nav-link\">Войти</NavLink>\r\n                </Route>\r\n                <Route path=\"/sign-in\">\r\n                    <NavLink to='/sign-up' className=\"header__nav-link\">Зарегистрироваться</NavLink>\r\n                </Route>\r\n                <Route path=\"/cards\">\r\n                    <p className=\"header__email-info\">{props.user}</p>\r\n                    <button onClick={props.onSignOut} className=\"header__nav-link\">Выйти</button>\r\n                </Route>\r\n            </nav>\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction Card(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const isOwn = props.card.owner._id === currentUser._id;\r\n\r\n    const cardDeleteButtonClassName = (\r\n        `place__delete ${isOwn ? '' : 'place__delete_hidden'}`\r\n      );\r\n    \r\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n    const cardLikeButtonClassName = `place__like ${isLiked ? 'place__like_active' : ''}`;\r\n\r\n    function handleClick() {\r\n        props.onClick(props.card);\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card)\r\n    }\r\n\r\n    function handleCardDelete() {\r\n        props.onCardDelete(props.card)\r\n    }\r\n  \r\n\r\n    return (\r\n        <div className=\"place\" key={props.card._id}>\r\n            <img className=\"place__picture\" alt=\"\" src={props.card.link} onClick={handleClick} />\r\n            <button className={cardDeleteButtonClassName} onClick={handleCardDelete}></button>\r\n            <div className=\"place__textarea\">\r\n                <p className=\"place__text\">{props.card.name}</p>\r\n                <div className=\"place__likesform\">\r\n                    <button className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\r\n                    <p className=\"place__likecount\">{props.card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport Card from './Card';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n    const currentUser = React.useContext(CurrentUserContext); \r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__avatar-block\">\r\n                    <img src={currentUser.avatar} className=\"profile__avatar\" alt=\"Жак-Ив Кусто\" />\r\n                    <button className=\"profile__edit-icon\" onClick={props.onEditAvatar}></button>\r\n                </div>\r\n                <div className=\"profile__info\">\r\n                    <div className=\"profile__info-grid\">\r\n                        <h2 className=\"profile__title\">{currentUser.name}</h2>\r\n                        <button className=\"edit-button\" onClick={props.onEditProfile}></button>\r\n                    </div>\r\n                    <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n                </div>\r\n                <button className=\"add-button\" onClick={props.onAddPlace}></button>\r\n            </section>\r\n\r\n            <section className=\"place-list\">\r\n                {props.cards.map(item => <Card key={item._id} card={item} onClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/>)}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react';\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\n\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\r\n            <form className=\"popup__container\" name={props.name} noValidate onSubmit={props.onSubmit}>\r\n                <fieldset className=\"popup__user-info\">\r\n                    <h3 className=\"popup__title\">{props.title}</h3>\r\n                    {props.children}\r\n                    <button className=\"popup__button\" type=\"submit\">{props.buttonName}</button>\r\n                </fieldset>\r\n                <button className=\"close-button\" id=\"close-button-avatarform\" type=\"reset\" onClick={props.onClose}></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm","import React from 'react';\r\n\r\n\r\nfunction ImagePopup(props) {\r\n    return (\r\n        <div className={`popup popup_type_${props.name} ${props.card.isOpen && 'popup_opened'}`}>\r\n            <div className=\"popup__picture-container\">\r\n                <img className=\"popup__full-picture\" alt={props.card.name} src={props.card.link} />\r\n                <p className=\"popup__picture-title\">{props.card.name}</p>\r\n                <button className=\"close-button\" id=\"close-button-picture\" type=\"reset\" onClick={props.onClose}></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePopup","export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const register = (email, password) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email, password })\r\n    })\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n};\r\n\r\nexport const authorize = (email, password) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email, password })\r\n    })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        });\r\n};\r\n\r\nexport const getContent = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`,\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => data)\r\n}","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport * as Auth from './Auth';\r\n\r\nfunction Login(props) {\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const history = useHistory();\r\n\r\n    function handleEmailChange(e) {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    function handlePasswordChange(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (!email || !password) {\r\n            return;\r\n        }\r\n        Auth.authorize(email, password)\r\n            .then(res => {\r\n                localStorage.setItem('jwt', res.token);\r\n                props.setUser(email);\r\n                setEmail('');\r\n                setPassword('');\r\n                props.handleLogin();\r\n                history.push('/cards');\r\n                props.handleInfoTooltip();\r\n            })\r\n        props.handleInfoTooltip();\r\n    }\r\n    return (\r\n        <main className=\"content\">\r\n            <form className=\"login\" onSubmit={handleSubmit}>\r\n                <h3 className=\"popup__title login__title\">Вход</h3>\r\n                <input className=\"popup__item login__item popup__item_el_email\" name=\"userEmail\" id=\"email-input\" type=\"email\" required\r\n                    placeholder=\"Email\" onChange={handleEmailChange} />\r\n                <span className=\"popup__error\" id=\"email-input-error\"></span>\r\n                <input className=\"popup__item login__item popup__item_el_password\" name=\"userPassword\" id=\"password-input\" type=\"password\"\r\n                    required placeholder=\"Пароль\" onChange={handlePasswordChange} />\r\n                <span className=\"popup__error\" id=\"password-input-error\"></span>\r\n                <button className=\"popup__button login__button\" type=\"submit\">Войти</button>\r\n                <Link to='/sign-up' className=\"login__link\">Ещё не зарегистрированы? Регистрация</Link>\r\n            </form>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport * as Auth from './Auth';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nfunction Register(props) {\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const history = useHistory();\r\n\r\n    function handleEmailChange(e) {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    function handlePasswordChange(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        Auth.register(email, password).then((res) => {\r\n            if (res) {\r\n                history.push('/cards');\r\n            } else {\r\n                console.log(\"Что-то пошло не так!\");\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <main className=\"content\">\r\n            <form className=\"login\" onSubmit={handleSubmit}>\r\n                <h3 className=\"popup__title login__title\">Регистрация</h3>\r\n                <input className=\"popup__item login__item popup__item_el_email\" name=\"userEmail\" id=\"email-input\" type=\"email\" required\r\n                    placeholder=\"Email\" onChange={handleEmailChange} />\r\n                <span className=\"popup__error\" id=\"email-input-error\"></span>\r\n                <input className=\"popup__item login__item popup__item_el_password\" name=\"userPassword\" id=\"password-input\" type=\"password\"\r\n                    required placeholder=\"Пароль\" onChange={handlePasswordChange} />\r\n                <span className=\"popup__error\" id=\"password-input-error\"></span>\r\n                <button className=\"popup__button login__button\" type=\"submit\">Зарегистрироваться</button>\r\n                <Link to='/sign-in' className=\"login__link\">Уже зарегистрированы? Войти</Link>\r\n            </form>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Register"," class Api{\r\n    constructor(options){\r\n        this.baseUrl = options.baseUrl;\r\n        this.headers = options.headers;\r\n    }\r\n\r\n    getUserInfo(){\r\n      return fetch(`${this.baseUrl}/users/me`, {headers: this.headers})\r\n        .then(res => {\r\n          if (res.ok) {\r\n            return res.json();\r\n          }\r\n          return Promise.reject(`Ошибка: ${res.status}`);\r\n        });\r\n    }\r\n\r\n    getInitialCards(){\r\n       return fetch(`${this.baseUrl}/cards`, {headers: this.headers})\r\n       .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n    changeProfileInfo(input){\r\n      return fetch(`${this.baseUrl}/users/me`,\r\n      {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name: input.author,\r\n          about: input.job\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n\r\n    addNewCard(input){\r\n      return fetch(`${this.baseUrl}/cards`,\r\n      {\r\n        method: 'POST',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name: input.name,\r\n          link: input.link\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n    putLike(cardId){\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`,{method: 'PUT', headers: this.headers})\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n    deleteLike(cardId){\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`,{method: 'DELETE', headers: this.headers})\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n    changeAvatar(input){\r\n      return fetch(`${this.baseUrl}/users/me/avatar`,\r\n      {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          avatar: input.avatar\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n    deleteCard(cardId){\r\n      return fetch(`${this.baseUrl}/cards/${cardId}`, {method: 'DELETE', headers: this.headers})\r\n       .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\r\n  headers: {\r\n      authorization: 'db48a2d9-d58c-40f0-82e6-c72b8d0b86f5',\r\n      'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api","import React from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser]);\r\n\r\n    function handleNameChange(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleDescriptionChange(e) {\r\n        setDescription(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onUpdateUser({\r\n            author: name,\r\n            job: description\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm title=\"Редактировать профиль\" name=\"info\" buttonName=\"Сохранить\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\r\n            children={\r\n                <>\r\n                    <input className=\"popup__item popup__item_el_name\" name=\"author\" id=\"name-input\" type=\"text\" required\r\n                        minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-zА-ЯЁа-яё -]{1,}\" placeholder=\"Имя\" defaultValue={name} onChange={handleNameChange} />\r\n                    <span className=\"popup__error\" id=\"name-input-error\"></span>\r\n                    <input className=\"popup__item popup__item_el_prof\" name=\"job\" id=\"prof-input\" type=\"text\" required\r\n                        minLength=\"2\" maxLength=\"200\" placeholder=\"Занятие\" defaultValue={description} onChange={handleDescriptionChange} />\r\n                    <span className=\"popup__error\" id=\"prof-input-error\"></span>\r\n                </>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup","import React from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditAvatarPopup(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const avaRef = React.useRef();\r\n    const [avatar, setAvatar] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        setAvatar(currentUser.avatar);\r\n    }, [currentUser]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onUpdateAvatar({\r\n                avatar: avaRef.current.value\r\n            }\r\n        );\r\n    }\r\n\r\n    function handleAvatarChange(e) {\r\n        setAvatar(e.target.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <PopupWithForm title=\"Обновить аватар\" name=\"avatar\" buttonName=\"Сохранить\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\r\n            children={\r\n                <>\r\n                    <input className=\"popup__item popup__item_el_avatar\" name=\"avatar\" id=\"avatar-input\" type=\"url\"\r\n                        placeholder=\"Ссылка на аватар\" required defaultValue={avatar} ref={avaRef} onChange={handleAvatarChange} />\r\n                    <span className=\"popup__error\" id=\"avatar-input-error\"></span>\r\n                </>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup","import React from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n    const inputName = React.useRef();\r\n    const inputLink = React.useRef();\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        props.onUpdatePlace({\r\n            name: inputName.current.value,\r\n            link: inputLink.current.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm title=\"Новое место\" name=\"add\" buttonName=\"Создать\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\r\n                        children={\r\n                            <>\r\n                                <input className=\"popup__item popup__item_el_place\" name=\"name\" id=\"place-input\" type=\"text\"\r\n                                    placeholder=\"Название\" required minLength=\"1\" maxLength=\"30\" ref={inputName} />\r\n                                <span className=\"popup__error\" id=\"place-input-error\"></span>\r\n                                <input className=\"popup__item popup__item_el_link\" name=\"link\" id=\"url-input\" type=\"url\"\r\n                                    placeholder=\"Ссылка на картинку\" required ref={inputLink} />\r\n                                <span className=\"popup__error\" id=\"url-input-error\"></span>\r\n                            </>\r\n                        }\r\n                    />\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup","import React from 'react';\r\nimport emblemOk from '../images/OkLogin.svg';\r\nimport emblemNot from '../images/NotLogin.svg';\r\n\r\nfunction InfoTooltip(props) {\r\n    return (\r\n        <div className={`popup ${props.isOpen && 'popup_opened'}`}>\r\n            <div className=\"popup__container\">\r\n                <div className=\"popup__infotooltip\">\r\n                    <img src={`${props.isLoggedIn ? emblemOk : emblemNot}`} className=\"popup__login_logo\" alt=\"Логин\" />\r\n                    <h3 className=\"popup__infotooltip-text\">{`${props.isLoggedIn ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'}`}</h3>\r\n                </div>\r\n                <button className=\"close-button\" id=\"close-button-avatarform\" type=\"reset\" onClick={props.onClose}></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoTooltip","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props  }) => {\r\n  return (\r\n    <Route>\r\n      {\r\n        () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"./sign-in\" />\r\n      }\r\n    </Route>\r\n)}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport api from '../utils/Api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport InfoTooltip from './InfoTooltip';\nimport * as Auth from './Auth';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport ProtectedRoute from './ProtectedRoute';\n\nfunction App() {\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const [user, setUser] = React.useState();\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n    const [cards, setCards] = React.useState([]);\n    const [selectedCard, setSelectedCard] = React.useState({\n        isOpen: false,\n        link: '',\n        name: ''\n    });\n\n    const [currentUser, setCurrentUser] = React.useState({});\n    const history = useHistory();\n\n    const tokenCheck = () => {\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            Auth.getContent(jwt).then((res) => {\n                if (res) {\n                    setUser(res.data.email);\n                    setLoggedIn(true);\n                    history.push('/cards');                    \n                }\n            });\n        }\n    }\n\n    React.useEffect(() => {\n        tokenCheck();\n    }, [loggedIn]) // eslint-disable-line react-hooks/exhaustive-deps\n\n    \n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([user, initialCards]) => {\n                setCurrentUser(user);\n                setCards([...initialCards]);\n            })\n            .catch(err => console.log(err));\n    }, [])\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        (!isLiked ? api.putLike(card._id) : api.deleteLike(card._id))\n            .then((newCard) => {\n                const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                setCards(newCards);\n            })\n            .catch(err => console.log(err));\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                const newCards = cards.filter((c) => c._id !== card._id);\n                setCards(newCards);\n            })\n            .catch(err => console.log(err));\n    }\n\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(props) {\n        setSelectedCard({\n            isOpen: true,\n            name: props.name,\n            link: props.link\n        });\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setSelectedCard(false);\n        setIsInfoTooltipOpen(false);\n    }\n\n\n    function handleUpdateAvatar(data) {\n        api.changeAvatar(data)\n            .then((newData) => {\n                setCurrentUser(newData);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(`Ошибка: ${err}`);\n            })\n    }\n\n    function handleUpdateUser(data) {\n        api.changeProfileInfo(data)\n            .then((newData) => {\n                setCurrentUser(newData);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(`Ошибка: ${err}`);\n            })\n    }\n\n    function handleLogin() {\n        setLoggedIn(true);\n    }\n\n    function handleInfoTooltip() {\n        setIsInfoTooltipOpen(true);\n    }\n\n    function signOut(){\n        localStorage.removeItem('jwt');\n        setLoggedIn(false);\n        setUser('');\n        history.push('/sign-in');\n    }\n\n\n\n    function handleUpdateCards(data) {\n        api.addNewCard(data)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(`Ошибка: ${err}`);\n            })\n    }\n  \n    return (\n        <>\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header onSignOut={signOut} user={user} isLoggedIn={loggedIn} />\n                <Switch>\n                    <ProtectedRoute path=\"/cards\" component={Main} loggedIn={loggedIn} \n                        cards={cards}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onCardClick={handleCardClick}\n                        onCardDelete={handleCardDelete}\n                        onCardLike={handleCardLike} />\n                    <Route path=\"/sign-in\">\n                        <Login handleLogin={handleLogin} handleInfoTooltip={handleInfoTooltip} setUser={setUser} />\n                    </Route>\n                    <Route path=\"/sign-up\">\n                        <Register />\n                    </Route>\n                    <Route>\n                        {<Redirect to={`/${loggedIn ? 'cards' : 'sign-in'}`} />}\n                    </Route>\n                </Switch>\n                <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n                <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n                <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onUpdatePlace={handleUpdateCards} />\n                <PopupWithForm title=\"Вы уверены?\" name=\"delete\" buttonName=\"Да\" onClose={closeAllPopups} />\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n                <InfoTooltip isLoggedIn={loggedIn} isOpen={isInfoTooltipOpen} onClose={closeAllPopups} />\n                <Footer />\n            </CurrentUserContext.Provider>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"page\">\n    <BrowserRouter >\n    <App />\n    </BrowserRouter>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}